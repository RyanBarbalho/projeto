# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'frontEnd.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QPainter, QBrush, QPen
from PyQt5.QtWidgets import *

ind = 0
#os nodes terao tamanho de 61x61 e coordenada inicial 580x10

class draw(QWidget):
    def __init__(self, X,Y, name):
        super(draw, self).__init__()
        self.x = X
        self.y = Y
        self.name = name
        self.paintEvent(X,Y,name)

    def paintEvent(self,event,X,Y,name):
        qp = QPainter()
        qp.setPen(QPen(Qt.blue, 8, Qt.SolidLine))
        qp.drawEllipse(61,61,X,Y)
        qp.setFont(QtGui.QFont('Arial', 20))
        qp.setPen(QtGui.QColor(0,0,0))
        qp.drawText(X,Y, name)


class Node:
    def __init__(self, key, ind, X, Y):
        self.name = key
        self.count = ind
        self.x = X
        self.y = Y
        self.left = None
        self.right = None
        

        
def comparison(fatherlist, sonlist, size):
    resembles = 0
    for i in range (size):
        if fatherlist[i] == sonlist[i]:
            resembles+=1

    return resembles

def insert(root, LISTA , sonchar, value,X,Y,fatherx,fathery,level):
    global ind
     
    if not root:
        newnode = Node(value,ind,X,Y)
        root = newnode
        ind += 1
        circle = draw(X,Y,value)
    else:
        fatherchar = []

        index = root.count
        for i in range (4):
            fatherchar.append(LISTA[index].charac[i])
        #chamar funcao semelhanca
        resemblance = comparison(fatherchar, sonchar, 4)

        if resemblance <= 2: 
            if root.left == None:
                newnode = Node(value,ind,X,Y)
                root.left = newnode
                ind += 1


            else:
                #atualizar as coordenadas
                if(level%2==0):
                    newx = root.x-100
                    newy = root.y+60
                else:
                    newx = root.x-60
                    newy = root.y+70
                insert(root.left, LISTA, sonchar, value,newx,newy,root.x,root.y,level+1)
        elif resemblance > 2:
            
            if root.right == None:
                newnode = Node(value,ind,X,Y)
                root.right = newnode
                ind += 1   
            else:#atualizar as coordenadas
                if(level%2==0):
                    newx = root.x+90
                    newy = root.y+60
                else:
                    newx = root.x+50
                    newy = root.y+70
                insert(root.right, LISTA, sonchar, value,newx,newy,root.x,root.y,level+1)
                
#print inOrder
def printTree(root):
        if root.left:
            printTree(root.left)
        print(root.name)
        if root.right:
            printTree(root.right)

class lista:
    def __init__(root, name, car1,car2,car3,car4):
        root.name = name 
        root.charac = [car1,car2,car3,car4]
#criar lista         
LISTA = []


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 700)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(40, 20, 101, 20))
        self.lineEdit.setObjectName("lineEdit")

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(50, 180, 75, 23))
        self.pushButton.setObjectName("pushButton")

        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(50, 240, 75, 23))
        self.pushButton_2.setObjectName("pushButton_2")

        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(10, 60, 161, 20))
        self.lineEdit_3.setObjectName("lineEdit_3")

        self.lineEdit_4 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_4.setGeometry(QtCore.QRect(10, 90, 161, 20))
        self.lineEdit_4.setObjectName("lineEdit_4")

        self.lineEdit_5 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_5.setGeometry(QtCore.QRect(10, 150, 161, 20))
        self.lineEdit_5.setObjectName("lineEdit_5")

        self.lineEdit_6 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_6.setGeometry(QtCore.QRect(10, 120, 161, 20))
        self.lineEdit_6.setObjectName("lineEdit_6")
        #botao 1 eh clicado
        self.pushButton.clicked.connect(self.insertNode)


        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(40, 210, 101, 20))
        self.lineEdit_2.setObjectName("lineEdit_2")



        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 926, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def paintEvent(self, event, x, y):
        painter = QPainter(self)
        painter.setPen(QPen(Qt.green, 8, Qt.SolidLine))
        painter.drawEllipse(61,61,x,y)

    def insertNode(self):
        global ind
        name = self.lineEdit.text()
        caracteristica1 = self.lineEdit_3.text()
        caracteristica2 = self.lineEdit_4.text()
        caracteristica3 = self.lineEdit_5.text()
        caracteristica4 = self.lineEdit_6.text()
        object = lista(name, caracteristica1, caracteristica2, caracteristica3, caracteristica4)
        LISTA.append(object)

        if ind == 0:
            tree = Node(name,ind)
            tree.x = 580
            tree.y = 10
            ind+=1
            circle = draw(580,10,name)
        else:
            insert(tree, LISTA, LISTA[ind].charac, name,0,0,0,0,0)
        printTree(tree)

    



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Insert Node"))
        self.pushButton_2.setText(_translate("MainWindow", "Find Node"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
